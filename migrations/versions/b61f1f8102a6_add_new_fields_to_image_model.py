"""Add new fields to Image model

Revision ID: b61f1f8102a6
Revises: 87e0fcc1899e
Create Date: 2025-08-02 21:51:54.784118

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b61f1f8102a6'
down_revision: Union[str, None] = '87e0fcc1899e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('name', sa.String(length=255), nullable=False))
    op.add_column('images', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('images', sa.Column('last_seen_at', sa.DateTime(), nullable=False))
    op.add_column('images', sa.Column('first_detected_at', sa.DateTime(), nullable=False))
    op.add_column('images', sa.Column('total_tags', sa.Integer(), nullable=True))
    op.add_column('images', sa.Column('total_size_bytes', sa.Integer(), nullable=True))
    op.add_column('images', sa.Column('total_size_mb', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('deployed_tags_count', sa.Integer(), nullable=True))
    op.add_column('images', sa.Column('os', sa.String(length=50), nullable=True))
    op.alter_column('images', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('images', 'is_deployed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_constraint('images_digest_key', 'images', type_='unique')
    op.create_index(op.f('ix_images_is_active'), 'images', ['is_active'], unique=False)
    op.create_index(op.f('ix_images_is_deployed'), 'images', ['is_deployed'], unique=False)
    op.create_index(op.f('ix_images_name'), 'images', ['name'], unique=True)
    op.drop_column('images', 'size_bytes')
    op.drop_column('images', 'digest')
    op.drop_column('images', 'tag')
    op.drop_column('images', 'repository')
    op.drop_column('images', 'soft_deleted_at')
    op.drop_column('images', 'backup_location')
    op.drop_column('images', 'last_pulled_at')
    op.drop_column('images', 'pull_count')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('images', sa.Column('pull_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('last_pulled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('backup_location', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('soft_deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('images', sa.Column('repository', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('images', sa.Column('tag', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('images', sa.Column('digest', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('images', sa.Column('size_bytes', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_images_name'), table_name='images')
    op.drop_index(op.f('ix_images_is_deployed'), table_name='images')
    op.drop_index(op.f('ix_images_is_active'), table_name='images')
    op.create_unique_constraint('images_digest_key', 'images', ['digest'])
    op.alter_column('images', 'is_deployed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('images', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('images', 'os')
    op.drop_column('images', 'deployed_tags_count')
    op.drop_column('images', 'total_size_mb')
    op.drop_column('images', 'total_size_bytes')
    op.drop_column('images', 'total_tags')
    op.drop_column('images', 'first_detected_at')
    op.drop_column('images', 'last_seen_at')
    op.drop_column('images', 'description')
    op.drop_column('images', 'name')
    # ### end Alembic commands ###
